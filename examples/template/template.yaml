
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: fintech-repositoy-template
  title: Fintech Repository Template
  description: Fintech Repository Template
spec:
  owner: user:guest
  type: service

  parameters:
  
    - title: Choose target repositoy
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Target Repository
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: create-readme-file
      name: Create README file
      action: acme:file:create
      input:
        contents: "Template Repository generated by Backstage"
        filename: ./output/new-repo/README.md

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        title: "Template Repository generated by Backstage"
        sourcePath: ./output/new-repo

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
---

apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: fintech-template
  title: Fintech Template
  description: Fintech Templates
spec:
  owner: user:guest
  type: service

  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Github
      required:
        - templateURL
        - targetURL
      properties:
        templateURL:
          title: URL Template Github
          type: string
          description: Template Github
          ui:autofocus: true
          ui:options:
            rows: 5
        targetURL:
          title: URL Target Project
          type: string
          description: Target Github
          ui:autofocus: true
          ui:options:
            rows: 5

    - title: Components List
      required:
        - components
      properties:
        components:
          title: Components
          type: array
          description: A list of components with name and type
          items:
            type: object
            properties:
              name:
                type: string
                title: Component Name
                description: Unique name of the component
              path:
                type: string
                title: Source Template Path
                description: Source Template Path
              values:
                type: array
                title: Values
                description: A list of key-value pairs for the component
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      title: Key
                      description: The key for the pair
                    value:
                      type: string
                      title: Value
                      description: The value for the pair
                ui:options:
                  placeholder: Add a key-value pair
          ui:options:
            placeholder: Add a component

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Target Repository
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:

    - id: fetch-base
      name: Fetch Base
      action: fetch:plain
      input:
        url: "${{ parameters.templateURL }}"
        targetPath: ./output/template
        values:
          name: ${{ parameters.name }}
          components: ${{ parameters.components }}

    - id: fetch-target-repo
      name: Fetch Target Repo
      action: fetch:plain
      input:
        url: "${{ parameters.targetURL }}"
        targetPath: ./output/new-repo

    - id: create-custom-file
      name: Create an Acme file
      action: acme:file:create
      input:
        contents: "Conteudo arquivo"
        filename: ./output/new-repo/ACME.properties

    - id: fetch-components-template
      name: Fetch Components Template
      action: tr:fetch:template
      input:
        items: ${{ parameters.components }}
        sourcePath: ./output/template
        targetPath: ./output/new-repo

    # - id: publish
    #   name: Publish
    #   action: publish:github
    #   input:
    #     allowedHosts: ['github.com']
    #     description: This is ${{ parameters.name }}
    #     repoUrl: ${{ parameters.repoUrl }}
    #     title: "Template gerado pelo Backstage"
    #     sourcePath: ./output/new-repo

    - id: pull-request
      name: Pull Request
      action: publish:github:pull-request
      if: "${steps['publish'].status != 'failed'}"
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        #repoUrl: ${{ parameters.targetURL }}
        branchName: "CI/${{ parameters.name }}"
        title: "Template gerado pelo Backstage"
        sourcePath: ./output/new-repo
        update: true

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
---

apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: archimate-template
  title: Archimate Template
  description: Archimate example
spec:
  owner: user:guest
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Template URL Github
      required:
        - templateURL
      properties:
        templateURL:
          title: URL Template Github
          type: string
          description: Template Github
          ui:autofocus: true
          ui:options:
            rows: 5

    - title: Components List
      required:
        - components
      properties:
        components:
          title: Components
          type: array
          description: A list of components with name and type
          items:
            type: object
            properties:
              name:
                type: string
                title: Component Name
                description: Unique name of the component
              type:
                type: string
                title: Component Type
                description: Type of the component
              template:
                type: string
                title: Template
                description: Template

          ui:options:
            placeholder: Add a component

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

    - title: Key-Value Pairs
      required:
        - keyValuePairs
      properties:
        keyValuePairs:
          title: Key-Value Pairs
          type: array
          description: A list of key-value pairs
          items:
            type: object
            properties:
              key:
                type: string
                title: Key
                description: The key for the pair
              value:
                type: string
                title: Value
                description: The value for the pair
          ui:options:
            placeholder: Add a key-value pair

  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: "${{ parameters.templateURL }}"
        targetPath: ./output  # Define um caminho expl√≠cito para o template
        values:
          name: ${{ parameters.name }}
          extraValues: ${{ parameters.keyValuePairs }}
          components: ${{ parameters.components }}  

    - id: debug
      name: Debug
      action: debug:log
      input:
        message: "Template downloaded to: ${{ steps.fetch-base.output.targetPath }}"

    # The final step is to register our new component in the catalog.
    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
    #     catalogInfoPath: '/catalog-info.yaml'

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
